#xcode
xcode-select --install


#homebrew
安装：https://www.jianshu.com/p/01a9800612d3
安装脚本（选择2清华大学源）：/bin/zsh -c "$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)"
卸载脚本：/bin/zsh -c "$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/HomebrewUninstall.sh)"

更换镜像源：https://www.jianshu.com/p/631e63dab0a0
cd /opt/homebrew
git remote -v
git remote set-url origin git://mirrors.tuna.tsinghua.edu.cn/homebrew.git
brew的官方镜像源为: https://github.com/Homebrew/homebrew
清华镜像源: git://mirrors.tuna.tsinghua.edu.cn/homebrew.git
中科大镜像源: http://mirrors.ustc.edu.cn/homebrew.git

使用：
1.查看Homebrew命令：brew help
2.安装任意包：brew install <packageName>，eg：brew install node
3.卸载任意包：brew uninstall <packageName>，eg：brew uninstall git
4.查询可用包：brew search <packageName>
5.查询已安装包列表：brew list
6.查看任意包信息：brew info <packageName>
7.更新Homebrew：brew update
8.Homebrew帮助信息：brew -h
9.查看brew版本：brew -v
10.整理重复语句：open ~/.zshrc -e、open ~/.bash_profile -e

Homebrew ：brew 程序所在路径，homebrew 的仓库位置默认位于/usr/local/Homebrew 下
Cellar ：文件夹存放的是所有包安装所在路径，包括二进制，文档和配置文件，按照这样 Cellar/包名/版本号/ 的形式来安放。
keg：具体某个包所在的目录，是 cellar 的子目录。
opt ：由于版本号随着跟新而改变的，所以需要一个固定不变的路径作为我们访问二进制和文档的路径，这就是 opt 的作用。
bin ：所有包安装之后二进制都会链接到这个路径下
share ：所有包安装之后的文档都会链接到这个路径下
etc ：同上，所有包的配置文件
lib ：同上，所有包相关库文件
Caskroom ：app 文件

————————————————
版权声明：本文为CSDN博主「M-Codes」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/efew212efe/article/details/124974503

#git安装及升级
#查看git指向: which git
#查看git版本信息： git version
#安装最新版Git: brew install git
#通过brew link将git指向我们通过Homebrew安装的git：brew link git --overwrite
#重新打开客户端后， 再次查看指向和版本，变成最新的


#php安装及配置
查看及安装：
brew tap shivammathur/php （没有目标版本时挂载第三方扩展）
brew search php
brew install php@7.2
加载配置：
echo 'export PATH="/opt/homebrew/opt/php@7.2/bin:$PATH"' >> ~/.zshrc
echo 'export PATH="/opt/homebrew/opt/php@7.2/sbin:$PATH"' >> ~/.zshrc
source ~/.zshrc
查看安装版本：php -v
安装php版本切换控制：brew install brew-php-switcher


#php扩展安装：
php扩展目录：
cd /opt/homebrew/Cellar/php@7.2/7.2.34_2/pecl/20170718/
重启php-fpm
brew services restart php@7.2

#php-apcu扩展
下载扩展包：http://pecl.php.net/package/APCu
cd /opt/homebrew/opt
mv apcu-5.1.20.tgz ./apcu-5.1.20.tgz
tar zxvf apcu-5.1.20.tgz
cd apcu-5.1.20.tgz
/opt/homebrew/Cellar/php@7.2/7.2.34_2/bin/phpize
./configure --enable-apcu --with-php-config=/opt/homebrew/Cellar/php@7.2/7.2.34_2/bin/php-config
make && make install
安装成功提示安装位置：
Installing shared extensions:     /opt/homebrew/Cellar/php@7.2/7.2.34_2/pecl/20170718/
Installing header files:          /opt/homebrew/Cellar/php@7.2/7.2.34_2/include/php/
修改/opt/homebrew/etc/php/7.2/php.ini,添加：
extension = apcu.so
apc.enabled= on
apc.shm_size= 64M
apc.enable_cli = on

#php-rdkafka扩展安装：
先安装librdkafka:
git clone https://github.com/edenhill/librdkafka.git
cd librdkafka
./configure
make && make install
再安装rdkafka:
下载扩展包：https://pecl.php.net/package/rdkafka
tar zxvf rdkafka-4.1.2.tgz
cd rdkafka-4.1.2
/opt/homebrew/Cellar/php@7.2/7.2.34_2/bin/phpize
./configure --with-php-config=/opt/homebrew/Cellar/php@7.2/7.2.34_2/bin/php-config
make && make install
修改/opt/homebrew/etc/php/7.2/php.ini，添加extension=rdkafka.so



#nginx安装及配置
安装：brew install nginx
启动nginx：brew services start nginx
nginx常用命令：
sudo nginx             #启动nginx服务
sudo nginx -s reload   #重启nginx服务
sudo nginx -s stop     #停止nginx服务
sudo nginx -t          #检测配置文件中是否存在语法错误
浏览器访问：localhost:8080

修改配置支持php：
sudo vi /opt/homebrew/etc/nginx/nginx.conf
添加index.php、document_root、server_names_hash_bucket_size、去注释改端口等：
server {
    listen       80;
}
location / {
    root   html;
    index  index.html index.htm index.php;
}
location ~ \.php$ {
    root           html;
    fastcgi_pass   127.0.0.1:9000;
    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    include        fastcgi_params;
}
http {
    ......
    server_names_hash_bucket_size 128;
    ......
}
添加php测试文件：
cd /opt/homebrew/var/www
touch index.php
sudo vi index.php
<?php phpinfo(); ?>
浏览器访问：localhost/index.php

项目nginx.conf示例：
server {
        listen 80;
        server_name  local.housemonitor.58corp.com;
        index index.html index.htm index.php;
        root /Users/yuxinwei/Documents/work/project/hbg_php_housemonitor/phpapps/housemonitor/public;
        proxy_ignore_client_abort on;

        set $https_tag "off";
        if ($http_x_scheme ~* "https") {
            set $https_tag "on";
        }

        set $php_script_name "index.php";

        location ~* /static/.*\.(js|fonts|img|css|map|ico|png|json)$  {
            access_log  off;
        }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location / {
            include         fastcgi_params;
            fastcgi_pass    127.0.0.1:9000;
            fastcgi_param   SERVER_NAME         $host;
            fastcgi_param   SCRIPT_FILENAME     $document_root/$php_script_name;
            fastcgi_param   SCRIPT_NAME         /$php_script_name;
            fastcgi_param   HTTPS               $https_tag;
        }
}